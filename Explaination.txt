Project Name: Question-Answer using LLM (LArge Language Model)


Description:
This project demonstrates the usage of various Python libraries and tools to perform web scraping, text preprocessing, PDF generation, and question answering using AI models. 
The code fetches content from a website, extracts specific information, preprocesses text data, generates a PDF document, and uses an AI model for question answering.

Dependencies:
- Python 3.x
- Libraries:
    * beautifulsoup4: For web scraping (HTML parsing).
    * requests: HTTP library for making requests.
    * transformers: Library for state-of-the-art Natural Language Processing (NLP).
    * sentence-transformers: Library for computing sentence embeddings.
    * faiss-cpu: Efficient similarity search and clustering of dense vectors.
    * pandas: Data manipulation and analysis library.
    * nltk: Natural Language Toolkit for NLP tasks.
    * chromadb: Client library for ChromaDB, a database for storing and querying embeddings.
    * reportlab: Library for creating PDFs.
    * langchain: Library for working with language models and data loaders.
    * unstructured: Library for handling unstructured data.
    * docx2txt: Converts Microsoft Word documents (DOCX) to plain text.
    * genai: Library for accessing Generative AI models from GenAI.

Installation Instructions:
1. Install Python 3.x from https://www.python.org/downloads/.
2. Open a terminal or command prompt.
3. Install the required Python libraries using pip:
    pip install requests beautifulsoup4 transformers sentence-transformers faiss-cpu pandas nltk chromadb langchain unstructured docx2txt reportlab genai

Usage Instructions:
1. Clone or download the repository from GitHub.
2. Navigate to the project directory.
3. Ensure all dependencies are installed (see installation instructions).
4. Run the Python script main.py to execute the code:
   
    python main.py

5. Follow the prompts to enter questions and receive answers from the AI model.

Code Explanation:
- `main.py`: Entry point of the program, orchestrates the workflow.
- `scrape.py`: Contains functions for web scraping using requests and BeautifulSoup.
- `preprocess.py`: Functions for text preprocessing using regex.
- `generate_pdf.py`: Functions for generating PDF documents using reportlab.
- `question_answering.py`: Functions for querying an AI model (Gemini) using GenAI.
- `README.txt`: This file, explaining the project and usage instructions.

Credits:
- Created by Diksha Bisht.
- Collaborators: Diksha Bisht, Deepak Garg

Contact:
For questions or feedback, please contact bishtdiksha096@gmail.com
